{"version":3,"sources":["services/api.js","components/Character/index.js","components/CharacterList/index.js","components/SearchBar/index.js","components/Page/index.js","components/Pagination/index.js","App.js","index.js"],"names":["arr","i","push","getCharacterList","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","data","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","apply","this","arguments","Character","props","react_default","createElement","renderprops","from","transform","opacity","to","config","duration","delay","animation","className","style","name","src","image","alt","status","species","gender","CharacterList","_Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","renderItemsOnScreen","currentPage","amountCharactersOnPage","listCharacters","lastCharacterOnPage","Math","ceil","arrayCharacters","Character_Character","assign","key","inherits","createClass","value","Component","SearchBar","state","sort","searchField","changeState","target","setState","defineProperty","handleChange","newList","initialListCharacters","filterByGenderAndStatus","b","filter","_ref2","toLowerCase","includes","onChange","filterList","valueState","propObj","item","firstSort","secondSort","onSubmit","e","preventDefault","type","placeholder","Page","id","page","htmlFor","Pagination","handleClick","tagName","Number","parentElement","lastChild","innerHTML","console","log","onClick","window","scrollTo","createPagination","pages","arrayPages","Page_Page","maxNumberCharactersOnPage","j","App","isFetching","handleState","undefined","toConsumableArray","_this$state","SearchBar_SearchBar","CharacterList_CharacterList","Pagination_Pagination","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"uRAEA,kHADIA,SAAM,IACDC,EAAI,EAAGA,EAAI,IAAKA,IACvBD,EAAIE,KAAKD,GAEJ,IAAME,EAAgB,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPC,MANT,4CAMsB,IAAAC,OAAOlB,IADb,cACxBW,EADwBG,EAAAK,KAAAL,EAAAE,KAAA,EAEXL,EAASS,OAFE,cAExBR,EAFwBE,EAAAK,KAAAL,EAAAO,OAAA,SAGvBT,GAHuB,wBAAAE,EAAAQ,SAAAZ,MAAH,yBAAAN,EAAAmB,MAAAC,KAAAC,YAAA,mBCFhBC,EAAY,SAAAC,GACvB,OACEC,EAAApB,EAAAqB,cAACC,EAAA,OAAD,CACEC,KAAM,CAAEC,UAAW,WAAYC,QAAS,GACxCC,GAAI,CAAEF,UAAW,WAAYC,QAAS,GACtCE,OAAQ,CAAEC,SAAU,IAAKC,MAAO,MAE/B,SAAAC,GAAS,OACRV,EAAApB,EAAAqB,cAAA,UAAQU,UAAU,iBAAiBC,MAAOF,GACxCV,EAAApB,EAAAqB,cAAA,UAAKF,EAAMc,MACXb,EAAApB,EAAAqB,cAAA,OAAKa,IAAKf,EAAMgB,MAAOC,IAAKjB,EAAMc,OAClCb,EAAApB,EAAAqB,cAAA,kBACED,EAAApB,EAAAqB,cAAA,oBACWF,EAAMkB,OADjB,IACyBjB,EAAApB,EAAAqB,cAAA,WADzB,YAEYF,EAAMmB,QAFlB,IAE2BlB,EAAApB,EAAAqB,cAAA,WAF3B,WAGWF,EAAMoB,aCfhBC,SAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAA9C,OAAA+C,EAAA,EAAA/C,CAAAmB,KAAAwB,GAAA,QAAAK,EAAA5B,UAAA6B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAhC,UAAAgC,GAAA,OAAAN,EAAA9C,OAAAqD,EAAA,EAAArD,CAAAmB,MAAA0B,EAAA7C,OAAAsD,EAAA,EAAAtD,CAAA2C,IAAAY,KAAArC,MAAA2B,EAAA,CAAA1B,MAAAN,OAAAqC,MACEM,oBAAsB,SACpBC,EACAC,EACAC,GAEA,GAA8B,IAA1BA,EAAeV,OACjB,OACE1B,EAAApB,EAAAqB,cAAA,MAAIU,UAAU,SAAd,0DAWJ,IANA,IACI0B,EACFH,IAFaI,KAAKC,KAAKH,EAAeV,OAASS,GAG3CC,EAAeV,OACfS,EAAyBD,EAC3BM,EAAkB,GAEhBnE,EAAI8D,GAA0BD,EAAc,GAChD7D,EAAIgE,EACJhE,IAEAmE,EAAgBlE,KAAK0B,EAAApB,EAAAqB,cAACwC,EAADhE,OAAAiE,OAAA,GAAeN,EAAe/D,GAA9B,CAAkCsE,IAAKtE,MAG9D,OAAOmE,GA3BXjB,EAAA,OAAA9C,OAAAmE,EAAA,EAAAnE,CAAA2C,EAAAC,GAAA5C,OAAAoE,EAAA,EAAApE,CAAA2C,EAAA,EAAAuB,IAAA,SAAAG,MAAA,WA+BI,OACE9C,EAAApB,EAAAqB,cAAA,WAASU,UAAU,kBAChBf,KAAKqC,oBACJrC,KAAKG,MAAMmC,YACXtC,KAAKG,MAAMoC,uBACXvC,KAAKG,MAAMqC,qBApCrBhB,EAAA,CAAmC2B,sBCDtBC,SAAb,SAAA3B,GAAA,SAAA2B,IAAA,IAAA1B,EAAAC,EAAA9C,OAAA+C,EAAA,EAAA/C,CAAAmB,KAAAoD,GAAA,QAAAvB,EAAA5B,UAAA6B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAhC,UAAAgC,GAAA,OAAAN,EAAA9C,OAAAqD,EAAA,EAAArD,CAAAmB,MAAA0B,EAAA7C,OAAAsD,EAAA,EAAAtD,CAAAuE,IAAAhB,KAAArC,MAAA2B,EAAA,CAAA1B,MAAAN,OAAAqC,MACEsB,MAAQ,CACN9B,OAAQ,GACRF,OAAQ,GACRiC,KAAM,GACNC,YAAa,IALjB5B,EAQE6B,YAAc,SAAA5E,GAAgB,IAAb6E,EAAa7E,EAAb6E,OACTxC,EAAgBwC,EAAhBxC,KAAMiC,EAAUO,EAAVP,MACZvB,EAAK+B,SAAL7E,OAAA8E,EAAA,EAAA9E,CAAA,GAAiBoC,EAAOiC,GAAS,WAC/BvB,EAAKiC,aAAaV,MAXxBvB,EAeEiC,aAAe,SAAAV,GACb,IAAIW,EAAUlC,EAAKxB,MAAM2D,sBAEC,KAAtBnC,EAAK0B,MAAM9B,OACbsC,EAAUlC,EAAKoC,wBAAwB,SAAU,SAAUF,GAEjC,KAAtBlC,EAAK0B,MAAMhC,SACbwC,EAAUlC,EAAKoC,wBAAwB,SAAU,SAAUF,IAIjD,YAAVX,GAA2C,YAApBvB,EAAK0B,MAAMC,MACpCO,EAAQP,KAAK,SAACtE,EAAGgF,GAAJ,OAAWhF,EAAEiC,KAAO+C,EAAE/C,MAAQ,EAAI,IAEnC,aAAViC,GAA4C,aAApBvB,EAAK0B,MAAMC,MACrCO,EAAQP,KAAK,SAACtE,EAAGgF,GAAJ,OAAWhF,EAAEiC,KAAO+C,EAAE/C,MAAQ,EAAI,IAG7CU,EAAK0B,MAAME,cACbM,EAAUA,EAAQI,OAAO,SAAAC,GAAA,OAAAA,EAAGjD,KACrBkD,cAAcC,SAASzC,EAAK0B,MAAME,YAAYY,kBAEvDxC,EAAKxB,MAAMkE,SAASR,IArCxBlC,EAwCEsC,OAAS,SAACK,EAAYC,EAAYC,GAAzB,OACPF,EAAWL,OAAO,SAAAQ,GAChB,MAAmB,QAAfF,GACGE,EAAKD,GAASL,gBAAkBI,KA3C7C5C,EA8CEoC,wBAA0B,SAACW,EAAWC,EAAYL,GAMhD,OALAA,EAAa3C,EAAKsC,OAAOK,EAAY3C,EAAK0B,MAAMqB,GAAYA,GAE7B,KAA3B/C,EAAK0B,MAAMsB,KACbL,EAAa3C,EAAKsC,OAAOK,EAAY3C,EAAK0B,MAAMsB,GAAaA,IAExDL,GApDX3C,EAAA,OAAA9C,OAAAmE,EAAA,EAAAnE,CAAAuE,EAAA3B,GAAA5C,OAAAoE,EAAA,EAAApE,CAAAuE,EAAA,EAAAL,IAAA,SAAAG,MAAA,WAwDI,OACE9C,EAAApB,EAAAqB,cAAA,WAASU,UAAU,UACjBX,EAAApB,EAAAqB,cAAA,QAAMgE,SAAUrE,KAAKwD,YAAaoB,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBACjD1E,EAAApB,EAAAqB,cAAA,SACE0E,KAAK,OACLhE,UAAU,kBACViE,YAAY,YACZ/D,KAAK,gBAGPb,EAAApB,EAAAqB,cAAA,WACED,EAAApB,EAAAqB,cAAA,yBADF,IAC2BD,EAAApB,EAAAqB,cAAA,WACzBD,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SAAO0E,KAAK,QAAQ9D,KAAK,SAASiC,MAAM,SAD1C,SAGA9C,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SAAO0E,KAAK,QAAQ9D,KAAK,SAASiC,MAAM,WAD1C,UAIA9C,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SAAO0E,KAAK,QAAQ9D,KAAK,SAASiC,MAAM,eAD1C,cAIA9C,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SAAO0E,KAAK,QAAQ9D,KAAK,SAASiC,MAAM,YAD1C,WAIA9C,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SAAO0E,KAAK,QAAQ9D,KAAK,SAASiC,MAAM,QAD1C,QAKF9C,EAAApB,EAAAqB,cAAA,WACED,EAAApB,EAAAqB,cAAA,yBADF,IAC2BD,EAAApB,EAAAqB,cAAA,WACzBD,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SAAO0E,KAAK,QAAQ9D,KAAK,SAASiC,MAAM,UAD1C,UAGA9C,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SAAO0E,KAAK,QAAQ9D,KAAK,SAASiC,MAAM,SAD1C,SAGA9C,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SAAO0E,KAAK,QAAQ9D,KAAK,SAASiC,MAAM,YAD1C,YAGA9C,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SAAO0E,KAAK,QAAQ9D,KAAK,SAASiC,MAAM,QAD1C,SAIF9C,EAAApB,EAAAqB,cAAA,WACED,EAAApB,EAAAqB,cAAA,sBADF,IACwBD,EAAApB,EAAAqB,cAAA,WACtBD,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SAAO0E,KAAK,QAAQ9D,KAAK,OAAOiC,MAAM,YADxC,OAIA9C,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SAAO0E,KAAK,QAAQ9D,KAAK,OAAOiC,MAAM,aADxC,cA7GZE,EAAA,CAA+BD,cCAlB8B,eAAO,SAAA9E,GAClB,OACEC,EAAApB,EAAAqB,cAAA,WACED,EAAApB,EAAAqB,cAAA,SACE0E,KAAK,QACL9D,KAAM,QAAUd,EAAMc,KACtBiC,MAAO/C,EAAM+C,MACbnC,UAAW,cAAgBZ,EAAMc,KACjCiE,GAAI,OAAS/E,EAAMgF,KAAOhF,EAAMc,OAGlCb,EAAApB,EAAAqB,cAAA,SAAOU,UAAU,aAAaqE,QAAS,OAASjF,EAAMgF,KAAOhF,EAAMc,MAChEd,EAAMgF,SCXFE,EAAb,SAAA5D,GAAA,SAAA4D,IAAA,IAAA3D,EAAAC,EAAA9C,OAAA+C,EAAA,EAAA/C,CAAAmB,KAAAqF,GAAA,QAAAxD,EAAA5B,UAAA6B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAhC,UAAAgC,GAAA,OAAAN,EAAA9C,OAAAqD,EAAA,EAAArD,CAAAmB,MAAA0B,EAAA7C,OAAAsD,EAAA,EAAAtD,CAAAwG,IAAAjD,KAAArC,MAAA2B,EAAA,CAAA1B,MAAAN,OAAAqC,MACEuD,YAAc,SAAA1G,GAAgB,IAAb6E,EAAa7E,EAAb6E,OACf,GAAuB,UAAnBA,EAAO8B,QAAqB,CAC9B,IAAIjD,EAAckD,OAAO/B,EAAOgC,cAAcC,UAAUC,WACxDC,QAAQC,IAAIpC,EAAOgC,cAAcA,eACZ,KAAjBhC,EAAOP,MACTvB,EAAKxB,MAAM2F,QAAQnE,EAAKxB,MAAMqC,eAAgB,EAAGgD,OAAO/B,EAAOP,QAE/DvB,EAAKxB,MAAM2F,QACTnE,EAAKxB,MAAMqC,eACXF,EACAX,EAAKxB,MAAMoC,wBAGfwD,OAAOC,SAAS,EAAG,KAdzBrE,EAkBEsE,iBAAmB,SAAC1D,EAAwBD,EAAaE,GACvD,IAAI0D,EAAQxD,KAAKC,KAAKH,EAAeV,OAASS,GAC1C4D,EAAa,GAEjB,GAAID,EAAQ,EACV,IAAK,IAAIzH,EAAI,EAAGA,GAAKyH,EAAOzH,IAC1B0H,EAAWzH,KAAK0B,EAAApB,EAAAqB,cAAC+F,EAAD,CAAMjB,KAAM1G,EAAGsE,IAAKtE,EAAGwC,KAAM,oBAE1C,CACL,GAAIqB,EAAc,EAChB,IAAK,IAAI7D,EAAI,EAAGA,EAAIyH,EAAOzH,IACf,IAANA,IACF0H,EAAWzH,KACT0B,EAAApB,EAAAqB,cAAA,QAAM0C,IAAKtE,EAAGsC,UAAU,QAAxB,QAIFtC,EAAIyH,GAENC,EAAWzH,KAAK0B,EAAApB,EAAAqB,cAAC+F,EAAD,CAAMjB,KAAM1G,EAAGsE,IAAKtE,EAAGwC,KAAM,gBAGjD,GAAIqB,GAAe,GAAKA,GAAe4D,EAAQ,EAC7C,IAAK,IAAIzH,EAAI,EAAGA,EAAIyH,EAAOzH,IACf,IAANA,IACF0H,EAAWzH,KACT0B,EAAApB,EAAAqB,cAAA,QAAM0C,IAAKtE,EAAGsC,UAAU,QAAxB,QAIFtC,EAAI6D,EAAc,GAEhB7D,IAAM6D,EAAc,IACtB6D,EAAWzH,KACT0B,EAAApB,EAAAqB,cAAA,QAAM0C,IAAKtE,EAAGsC,UAAU,QAAxB,QAIFtC,EAAIyH,GAENC,EAAWzH,KAAK0B,EAAApB,EAAAqB,cAAC+F,EAAD,CAAMjB,KAAM1G,EAAGsE,IAAKtE,EAAGwC,KAAM,gBAGjD,GAAIqB,EAAc4D,EAAQ,EACxB,IAAK,IAAIzH,EAAI,EAAGA,GAAKyH,EAAOzH,IAChB,IAANA,IACF0H,EAAWzH,KACT0B,EAAApB,EAAAqB,cAAA,QAAM0C,IAAKtE,EAAGsC,UAAU,QAAxB,QAIFtC,EAAIyH,EAAQ,GAEdC,EAAWzH,KAAK0B,EAAApB,EAAAqB,cAAC+F,EAAD,CAAMjB,KAAM1G,EAAGsE,IAAKtE,EAAGwC,KAAM,gBAKnD,OAAOkF,GA5EXxE,EA+EE0E,0BAA4B,WAC1B,IAAIF,EAAa,GACjB,GAAyC,IAArCxE,EAAKxB,MAAMqC,eAAeV,OAA9B,CAGA,IAAK,IAAIrD,EAAI,EAAG6H,EAAI,GAAI7H,EAAI,EAAQ6H,EAAI,KAAT7H,EAC7B0H,EAAWzH,KAAK0B,EAAApB,EAAAqB,cAAC+F,EAAD,CAAMjB,KAAMmB,EAAGpD,MAAOoD,EAAGvD,IAAKtE,EAAGwC,KAAM,gBAEzD,OAAOkF,IAvFXxE,EAAA,OAAA9C,OAAAmE,EAAA,EAAAnE,CAAAwG,EAAA5D,GAAA5C,OAAAoE,EAAA,EAAApE,CAAAwG,EAAA,EAAAtC,IAAA,SAAAG,MAAA,WA0FI,OACE9C,EAAApB,EAAAqB,cAAA,OAAKU,UAAU,aACbX,EAAApB,EAAAqB,cAAA,OAAKU,UAAU,aAAa+E,QAAS9F,KAAKsF,aACvCtF,KAAKiG,iBACJjG,KAAKG,MAAMoC,uBACXvC,KAAKG,MAAMmC,YACXtC,KAAKG,MAAMqC,iBAGfpC,EAAApB,EAAAqB,cAAA,OAAKyF,QAAS9F,KAAKsF,YAAavE,UAAU,4BACvCf,KAAKqG,kCApGhBhB,EAAA,CAAgClC,aCqEjBoD,6MAhEblD,MAAQ,CACNb,eAAgB,GAChBsB,sBAAuB,GACvBxB,YAAa,EACbC,uBAAwB,GACxBiE,YAAY,KAEdC,YAAc,SACZjE,GAGG,IAFHF,EAEGrC,UAAA6B,OAAA,QAAA4E,IAAAzG,UAAA,GAAAA,UAAA,GAFW,EACdsC,EACGtC,UAAA6B,OAAA,QAAA4E,IAAAzG,UAAA,GAAAA,UAAA,GADsB0B,EAAK0B,MAAMd,uBAEpCZ,EAAK+B,SAAS,CACZlB,iBACAF,cACAC,6OAIyB5D,WAAvB6D,SACJxC,KAAK0D,SAAS,CACZlB,iBACAsB,sBAAsBjF,OAAA8H,EAAA,EAAA9H,CAAK2D,GAC3BgE,YAAY,uIAGP,IAAAI,EAMH5G,KAAKqD,MAJPb,EAFKoE,EAELpE,eACAsB,EAHK8C,EAGL9C,sBACAxB,EAJKsE,EAILtE,YACAC,EALKqE,EAKLrE,uBAEF,OAAIvC,KAAKqD,MAAMmD,WAEXpG,EAAApB,EAAAqB,cAAA,OAAKU,UAAU,aACbX,EAAApB,EAAAqB,cAAA,OAAKU,UAAU,YACfX,EAAApB,EAAAqB,cAAA,OAAKU,UAAU,YACfX,EAAApB,EAAAqB,cAAA,OAAKU,UAAU,aAKnBX,EAAApB,EAAAqB,cAAA,OAAKU,UAAU,OACbX,EAAApB,EAAAqB,cAACwG,EAAD,CACE/C,sBAAuBA,EACvBO,SAAUrE,KAAKyG,cAEjBrG,EAAApB,EAAAqB,cAACyG,EAAD,CACEtE,eAAgBA,EAChBF,YAAaA,EACbC,uBAAwBA,IAE1BnC,EAAApB,EAAAqB,cAAC0G,EAAD,CACEvE,eAAgBA,EAChBsD,QAAS9F,KAAKyG,YACdnE,YAAaA,EACbC,uBAAwBA,YA1DhBY,aCHlB6D,IAASC,OAAO7G,EAAApB,EAAAqB,cAAC6G,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.cd5ae4c7.chunk.js","sourcesContent":["const API_URL = \"https://rickandmortyapi.com/api/character\";\nlet arr = [];\nfor (let i = 1; i < 494; i++) {\n  arr.push(i);\n}\nexport const getCharacterList = async () => {\n  const response = await fetch(API_URL + `/${arr}`);\n  const data = await response.json();\n  return data;\n};\n","import React from \"react\";\nimport \"./style.scss\";\nimport { Spring } from \"react-spring/renderprops\";\nexport const Character = props => {\n  return (\n    <Spring\n      from={{ transform: \"scale(0)\", opacity: 0 }}\n      to={{ transform: \"scale(1)\", opacity: 1 }}\n      config={{ duration: 300, delay: 100 }}\n    >\n      {animation => (\n        <figure className=\"character-item\" style={animation}>\n          <h2>{props.name}</h2>\n          <img src={props.image} alt={props.name} />\n          <figcaption>\n            <p>\n              Status: {props.status} <br />\n              Species: {props.species} <br />\n              Gender: {props.gender}\n            </p>\n          </figcaption>\n        </figure>\n      )}\n    </Spring>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Character } from \"../Character\";\nimport \"./style.scss\";\nexport class CharacterList extends Component {\n  renderItemsOnScreen = (\n    currentPage,\n    amountCharactersOnPage,\n    listCharacters\n  ) => {\n    if (listCharacters.length === 0) {\n      return (\n        <h1 className=\"error\">\n          We don't have such character, check your input please!\n        </h1>\n      );\n    }\n    let lastPage = Math.ceil(listCharacters.length / amountCharactersOnPage);\n    let lastCharacterOnPage =\n      currentPage === lastPage\n        ? listCharacters.length\n        : amountCharactersOnPage * currentPage;\n    let arrayCharacters = [];\n    for (\n      let i = amountCharactersOnPage * (currentPage - 1);\n      i < lastCharacterOnPage;\n      i++\n    ) {\n      arrayCharacters.push(<Character {...listCharacters[i]} key={i} />);\n    }\n\n    return arrayCharacters;\n  };\n\n  render() {\n    return (\n      <section className=\"all-characters\">\n        {this.renderItemsOnScreen(\n          this.props.currentPage,\n          this.props.amountCharactersOnPage,\n          this.props.listCharacters\n        )}\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./style.scss\";\nexport class SearchBar extends Component {\n  state = {\n    gender: \"\",\n    status: \"\",\n    sort: \"\",\n    searchField: \"\"\n  };\n\n  changeState = ({ target }) => {\n    let { name, value } = target;\n    this.setState({ [name]: value }, () => {\n      this.handleChange(value);\n    });\n  };\n\n  handleChange = value => {\n    let newList = this.props.initialListCharacters;\n\n    if (this.state.gender !== \"\") {\n      newList = this.filterByGenderAndStatus(\"gender\", \"status\", newList);\n    } else {\n      if (this.state.status !== \"\") {\n        newList = this.filterByGenderAndStatus(\"status\", \"gender\", newList);\n      }\n    }\n\n    if (value === \"nameAsc\" || this.state.sort === \"nameAsc\") {\n      newList.sort((a, b) => (a.name < b.name ? -1 : 1));\n    }\n    if (value === \"nameDesc\" || this.state.sort === \"nameDesc\") {\n      newList.sort((a, b) => (a.name > b.name ? -1 : 1));\n    }\n\n    if (this.state.searchField)\n      newList = newList.filter(({ name }) =>\n        name.toLowerCase().includes(this.state.searchField.toLowerCase())\n      );\n    this.props.onChange(newList);\n  };\n\n  filter = (filterList, valueState, propObj) =>\n    filterList.filter(item => {\n      if (valueState === \"all\") return true;\n      return item[propObj].toLowerCase() === valueState;\n    });\n\n  filterByGenderAndStatus = (firstSort, secondSort, filterList) => {\n    filterList = this.filter(filterList, this.state[firstSort], firstSort);\n\n    if (this.state[secondSort] !== \"\") {\n      filterList = this.filter(filterList, this.state[secondSort], secondSort);\n    }\n    return filterList;\n  };\n\n  render() {\n    return (\n      <section className=\"search\">\n        <form onChange={this.changeState} onSubmit={e => e.preventDefault()}>\n          <input\n            type=\"text\"\n            className=\"search-by-input\"\n            placeholder=\"Search...\"\n            name=\"searchField\"\n          />\n\n          <div>\n            <strong>Gender:</strong> <br />\n            <label>\n              <input type=\"radio\" name=\"gender\" value=\"male\" /> Male\n            </label>\n            <label>\n              <input type=\"radio\" name=\"gender\" value=\"female\" />\n              Female\n            </label>\n            <label>\n              <input type=\"radio\" name=\"gender\" value=\"genderless\" />\n              Genderless\n            </label>\n            <label>\n              <input type=\"radio\" name=\"gender\" value=\"unknown\" />\n              Unknown\n            </label>\n            <label>\n              <input type=\"radio\" name=\"gender\" value=\"all\" />\n              All\n            </label>\n          </div>\n          <div>\n            <strong>Status:</strong> <br />\n            <label>\n              <input type=\"radio\" name=\"status\" value=\"alive\" /> Alive\n            </label>\n            <label>\n              <input type=\"radio\" name=\"status\" value=\"dead\" /> Dead\n            </label>\n            <label>\n              <input type=\"radio\" name=\"status\" value=\"unknown\" /> Unknown\n            </label>\n            <label>\n              <input type=\"radio\" name=\"status\" value=\"all\" /> All\n            </label>\n          </div>\n          <div>\n            <strong>Name</strong> <br />\n            <label>\n              <input type=\"radio\" name=\"sort\" value=\"nameAsc\" />\n              A-Z\n            </label>\n            <label>\n              <input type=\"radio\" name=\"sort\" value=\"nameDesc\" />\n              Z-A\n            </label>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.scss\";\nexport const Page = props => {\n  return (\n    <div>\n      <input\n        type=\"radio\"\n        name={\"page-\" + props.name}\n        value={props.value}\n        className={\"page-radio-\" + props.name}\n        id={\"page\" + props.page + props.name}\n      />\n\n      <label className=\"page-label\" htmlFor={\"page\" + props.page + props.name}>\n        {props.page}\n      </label>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { Page } from \"../Page\";\nexport class Pagination extends Component {\n  handleClick = ({ target }) => {\n    if (target.tagName === \"INPUT\") {\n      let currentPage = Number(target.parentElement.lastChild.innerHTML);\n      console.log(target.parentElement.parentElement);\n      if (target.value !== \"\") {\n        this.props.onClick(this.props.listCharacters, 1, Number(target.value));\n      } else {\n        this.props.onClick(\n          this.props.listCharacters,\n          currentPage,\n          this.props.amountCharactersOnPage\n        );\n      }\n      window.scrollTo(0, 0);\n    }\n  };\n\n  createPagination = (amountCharactersOnPage, currentPage, listCharacters) => {\n    let pages = Math.ceil(listCharacters.length / amountCharactersOnPage);\n    let arrayPages = [];\n\n    if (pages < 8) {\n      for (let i = 1; i <= pages; i++) {\n        arrayPages.push(<Page page={i} key={i} name={\"pagination\"} />);\n      }\n    } else {\n      if (currentPage < 5) {\n        for (let i = 1; i < pages; i++) {\n          if (i === 6) {\n            arrayPages.push(\n              <span key={i} className=\"page\">\n                ...\n              </span>\n            );\n            i = pages;\n          }\n          arrayPages.push(<Page page={i} key={i} name={\"pagination\"} />);\n        }\n      }\n      if (currentPage >= 5 && currentPage <= pages - 4) {\n        for (let i = 1; i < pages; i++) {\n          if (i === 2) {\n            arrayPages.push(\n              <span key={i} className=\"page\">\n                ...\n              </span>\n            );\n            i = currentPage - 1;\n          }\n          if (i === currentPage + 2) {\n            arrayPages.push(\n              <span key={i} className=\"page\">\n                ...\n              </span>\n            );\n            i = pages;\n          }\n          arrayPages.push(<Page page={i} key={i} name={\"pagination\"} />);\n        }\n      }\n      if (currentPage > pages - 4) {\n        for (let i = 1; i <= pages; i++) {\n          if (i === 2) {\n            arrayPages.push(\n              <span key={i} className=\"page\">\n                ...\n              </span>\n            );\n            i = pages - 4;\n          }\n          arrayPages.push(<Page page={i} key={i} name={\"pagination\"} />);\n        }\n      }\n    }\n\n    return arrayPages;\n  };\n\n  maxNumberCharactersOnPage = () => {\n    let arrayPages = [];\n    if (this.props.listCharacters.length === 0) {\n      return;\n    }\n    for (let i = 0, j = 10; i < 3; i++, j = 50 * i) {\n      arrayPages.push(<Page page={j} value={j} key={i} name={\"max-amount\"} />);\n    }\n    return arrayPages;\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"pagination\" onClick={this.handleClick}>\n          {this.createPagination(\n            this.props.amountCharactersOnPage,\n            this.props.currentPage,\n            this.props.listCharacters\n          )}\n        </div>\n        <div onClick={this.handleClick} className=\"choose-number-characters\">\n          {this.maxNumberCharactersOnPage()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { getCharacterList } from \"./services/api\";\nimport { CharacterList } from \"./components/CharacterList\";\nimport { SearchBar } from \"./components/SearchBar\";\nimport { Pagination } from \"./components/Pagination\";\n\nclass App extends Component {\n  state = {\n    listCharacters: [],\n    initialListCharacters: [],\n    currentPage: 1,\n    amountCharactersOnPage: 10,\n    isFetching: true\n  };\n  handleState = (\n    listCharacters,\n    currentPage = 1,\n    amountCharactersOnPage = this.state.amountCharactersOnPage\n  ) => {\n    this.setState({\n      listCharacters,\n      currentPage,\n      amountCharactersOnPage\n    });\n  };\n  async componentDidMount() {\n    let listCharacters = await getCharacterList();\n    this.setState({\n      listCharacters,\n      initialListCharacters: [...listCharacters],\n      isFetching: false\n    });\n  }\n  render() {\n    let {\n      listCharacters,\n      initialListCharacters,\n      currentPage,\n      amountCharactersOnPage\n    } = this.state;\n    if (this.state.isFetching) {\n      return (\n        <div className=\"animation\">\n          <div className=\"circle1\" />\n          <div className=\"circle2\" />\n          <div className=\"circle3\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <SearchBar\n          initialListCharacters={initialListCharacters}\n          onChange={this.handleState}\n        />\n        <CharacterList\n          listCharacters={listCharacters}\n          currentPage={currentPage}\n          amountCharactersOnPage={amountCharactersOnPage}\n        />\n        <Pagination\n          listCharacters={listCharacters}\n          onClick={this.handleState}\n          currentPage={currentPage}\n          amountCharactersOnPage={amountCharactersOnPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}